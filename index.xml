<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Davor Badrov</title>
    <link>davorbadrov.github.io/</link>
    <description>Recent content on Davor Badrov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dev.davor.badrov@gmail.com (davor badrov)</managingEditor>
    <webMaster>dev.davor.badrov@gmail.com (davor badrov)</webMaster>
    <lastBuildDate>Mon, 19 Jun 2017 13:37:56 +0200</lastBuildDate>
    
	<atom:link href="davorbadrov.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Avoid global node modules</title>
      <link>davorbadrov.github.io/blog/avoid-global-node-modules/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/blog/avoid-global-node-modules/</guid>
      <description>I suggest avoiding project related global dependencies and installing everything you need for a project as main or dev dependencies. Sometimes you just want to hack something up and you do a npm i -g ... and start coding without thinking about the consequences. For example my team used a globally installed sequelize-cli which later cause problems due to different versions being installed accross the team. It can cause problems for your personal projects too, if you have one project using sequelize 3.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>davorbadrov.github.io/about/</link>
      <pubDate>Mon, 19 Jun 2017 13:37:56 +0200</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/about/</guid>
      <description>I&amp;rsquo;m a full stack engineer currently stationed in Zagreb, Croatia. My main stack is based on JavaScript, these days it revolves around React and Node (coupled with Hapi.js mostly). I&amp;rsquo;m part of a team working for Kanban (knb.io) where we are developing cool things for both startups and enterprises.
I&amp;rsquo;m always looking for freelancing opportunities and fun projects to work on. If you think we could work together you can check my resume on LinkedIn.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>davorbadrov.github.io/about-me/</link>
      <pubDate>Mon, 19 Jun 2017 13:37:56 +0200</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/about-me/</guid>
      <description>I&amp;rsquo;m a full stack engineer currently stationed in Zagreb, Croatia. My main stack is based on JavaScript, these days it&amp;rsquo;s React and Node. I&amp;rsquo;m part of a team working for Kanban (knb.io) where we are developing cool things for both startups and enterprises.
I&amp;rsquo;m always looking for freelancing opportunities and fun projects to work on. You can check my resume on LinkedIn.
To list the skills &amp;amp; technologies which I&amp;rsquo;m familiar with: React, Node, Hapi.</description>
    </item>
    
    <item>
      <title>Nested SELECT query | Snippets</title>
      <link>davorbadrov.github.io/snippets/inner_query_examples/</link>
      <pubDate>Mon, 19 Jun 2017 13:37:56 +0200</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/snippets/inner_query_examples/</guid>
      <description>How to use inner select query in SQL.
SELECT t.date , COUNT(*) AS player_count FROM ( SELECT DATE(MIN(`date`)) AS date FROM player_playtime GROUP BY player_name ) AS t GROUP BY t.date DESC LIMIT 60 ;  </description>
    </item>
    
    <item>
      <title>SQL - Find duplicate values | Snippets</title>
      <link>davorbadrov.github.io/snippets/sql-find-double-entries/</link>
      <pubDate>Mon, 19 Jun 2017 13:37:56 +0200</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/snippets/sql-find-double-entries/</guid>
      <description>Find multiple entries inside a table for given values. This example return users which share their email with other users.
SELECT name, email, COUNT(*) FROM users GROUP BY name, email HAVING COUNT(*) &amp;gt; 1  </description>
    </item>
    
    <item>
      <title>Experiments with comments for npm scripts</title>
      <link>davorbadrov.github.io/blog/experiments-with-comments-for-npm-scripts/</link>
      <pubDate>Mon, 19 Jun 2017 12:53:11 +0200</pubDate>
      <author>dev.davor.badrov@gmail.com (davor badrov)</author>
      <guid>davorbadrov.github.io/blog/experiments-with-comments-for-npm-scripts/</guid>
      <description>The amount of npm scripts inside package.json can grow immensely for larger projects, it can become hard to track what each script does, especially if there are multiple people working on the same project and adding the mentioned scripts. It would be of huge help if we could comment what each script does so it&amp;rsquo;s easy to check what it does and how it&amp;rsquo;s used, but due to package.json being a JSON file format, it doesn&amp;rsquo;t support any comments.</description>
    </item>
    
  </channel>
</rss>